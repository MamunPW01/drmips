{
	"comment": "The unicycle version of the MIPS CPU, based on the reference book. This version also supports some additional instructions.",
	"components": {
		"PC":         {"type": "PC", "latency": 5, "x": 40, "y": 250, "in": "IN", "out": "OUT"},
		"PC_ADDER":   {"type": "add", "latency": 50, "x": 110, "y": 58, "in1": "IN1", "in2": "IN2", "out": "OUT", "desc": {"default": "This adder determines the address of the next sequential instruction.", "pt": "Este somador determina o endereço da instrução sequencial seguinte."}},
		"PC_4":       {"type": "const", "x": 85, "y": 73, "out": "OUT", "val": 4, "size": 32},
		"REG":        {"type": "regbank", "latency": 20, "x": 250, "y": 215, "num_regs": 32, "read_reg1": "ReadReg1", "read_reg2": "ReadReg2", "read_data1": "ReadData1", "read_data2": "ReadData2", "write_reg": "WriteReg", "write_data": "WriteData", "reg_write": "RegWrite", "const_regs": [{"reg": 0, "val": 0}]},
		"INST_MEM":   {"type": "imem", "latency": 100, "x": 90, "y": 215, "in": "IN", "out": "OUT"},
		"FORK_PC":    {"type": "fork", "x": 80, "y": 265, "size": 32, "in": "IN", "out": ["OUT1", "OUT2"]},
		"CONTROL":    {"type": "control", "latency": 20, "x": 220, "y": 110, "in": "Opcode"},
		"DIST_INST":  {"type": "dist", "x": 180, "y": 250, "in": {"id": "IN", "size": 32}, "out": [{"id": "31-26", "msb": 31, "lsb": 26}, {"msb": 25, "lsb": 21}, {"msb": 20, "lsb": 16},   {"msb": 15, "lsb": 11}, {"msb": 15, "lsb": 0}, {"msb": 25, "lsb": 0}]},
		"MUX_DST":    {"type": "mux", "x": 205, "y": 260, "size": 5, "sel": "RegDst", "out": "OUT", "in": ["0", "1"], "desc": {"default": "Selects rt or rd as the destination register.", "pt": "Selecciona o rt ou rd como registo de destino."}},
		"FORK_RT":    {"type": "fork", "x": 200, "y": 265, "size": 5, "in": "IN", "out": ["OUT1", "OUT2"]},
		"DIST_IMM":   {"type": "dist", "x": 255, "y": 340, "in": {"id": "IN", "size": 16}, "out": [{"msb": 15, "lsb": 0}, {"msb": 5, "lsb": 0}]},
		"SEXT_IMM":   {"type": "sext", "x": 280, "y": 330, "in": {"id": "IN", "size": 16}, "out": {"id": "OUT", "size": 32}},
		"MUX_REG":    {"type": "mux", "x": 350, "y": 270, "size": 32, "sel": "ALUSrc", "out": "OUT", "in": ["0", "1"]},
		"SLL_ADDR":   {"type": "sll", "x": 200, "y": 20, "in": {"id": "IN", "size": 26}, "out": {"id": "OUT", "size": 28}, "amount": 2},
		"DIST_ADD4":  {"type": "dist", "x": 250, "y": 60, "in": {"id": "IN", "size": 32}, "out": [{"msb": 31, "lsb": 28}, {"msb": 31, "lsb": 0}]},
		"CONCAT_ADDR":{"type": "concat", "x": 280, "y": 40, "in1": {"id": "IN1", "size": 4}, "in2": {"id": "IN2", "size": 28}, "out": "OUT"},
		"MUX_JUMP":   {"type": "mux", "x": 580, "y": 18, "size": 32, "sel": "Jump", "in": ["0", "1"], "out": "OUT"},
		"ALU_CONTROL":{"type": "alu_control", "latency": 20, "x": 360, "y": 330, "aluop": "ALUOp", "func": "func"},
		"ALU":        {"type": "ext_alu", "latency": 50, "x": 400, "y": 237, "in1": "IN1", "in2": "IN2", "control": "control", "out": "OUT", "zero": "ZERO"},
		"FORK_IMM":   {"type": "fork", "x": 340, "y": 292, "size": 32, "in": "IN", "out": ["OUT1", "OUT2"]},
		"SLL_IMM":    {"type": "sll", "x": 350, "y": 80, "amount": 2, "in": {"id": "IN", "size": 32}, "out": {"id": "OUT", "size": 32}},
		"ADD_BRANCH": {"type": "add", "latency": 50, "x": 420, "y": 60, "in1": "IN1", "in2": "IN2", "out": "OUT"},
		"FORK_BRANCH":{"type": "fork", "x": 320, "y": 71, "size": 32, "in": "IN", "out": ["OUT1", "OUT2"]},
		"MUX_BRANCH": {"type": "mux", "x": 530, "y": 50, "size": 32, "sel": "BRANCH", "in": ["0", "1"], "out": "OUT"},
		"AND_BRANCH": {"type": "and", "x": 480, "y": 100, "in1": "IN1", "in2": "IN2", "out": "OUT"},
		"FORK_MEM":   {"type": "fork", "x": 470, "y": 275, "size": 32, "in": "IN", "out": ["OUT1", "OUT2"]},
		"FORK_REG":   {"type": "fork", "x": 335, "y": 281, "size": 32, "in": "IN", "out": ["OUT1", "OUT2"]},
		"DATA_MEM":   {"type": "dmem", "latency": 100, "x": 480, "y": 242, "size": 100, "address": "ADDR", "write_data": "WRITE_DATA", "out": "OUT", "mem_read": "MemRead", "mem_write": "MemWrite"},
		"MUX_MEM":    {"type": "mux", "x": 580, "y": 270, "size": 32, "sel": "MemToReg", "in": ["0", "1"], "out": "OUT"}
	},
	"wires": [
		{"from": "PC", "out": "OUT", "to": "FORK_PC", "in": "IN"},
		{"from": "PC_4", "out": "OUT", "to": "PC_ADDER", "in": "IN2"},
		{"from": "FORK_PC", "out": "OUT1", "to": "PC_ADDER", "in": "IN1", "points": [{"x": 80, "y": 69}]},
		{"from": "FORK_PC", "out": "OUT2", "to": "INST_MEM", "in": "IN"},
		{"from": "CONTROL", "out": "RegWrite", "to": "REG", "in": "RegWrite", "start": {"x": 280, "y": 200}, "points": [{"x": 290, "y": 200}]},
		{"from": "INST_MEM", "out": "OUT", "to": "DIST_INST", "in": "IN"},
		{"from": "DIST_INST", "out": "31-26", "to": "CONTROL", "in": "Opcode", "start": {"x": 185, "y": 255}, "points": [{"x": 190, "y": 255}, {"x": 190, "y": 160}]},
		{"from": "DIST_INST", "out": "25-21", "to": "REG", "in": "ReadReg1", "start": {"x": 185, "y": 260}, "points": [{"x": 195, "y": 260}, {"x": 195, "y": 235}]},
		{"from": "DIST_INST", "out": "20-16", "to": "FORK_RT", "in": "IN", "start": {"x": 185, "y": 265}},
		{"from": "FORK_RT", "out": "OUT1", "to": "REG", "in": "ReadReg2", "points": [{"x": 200, "y": 255}]},
		{"from": "FORK_RT", "out": "OUT2", "to": "MUX_DST", "in": "0", "points": [{"x": 200, "y": 271}]},
		{"from": "DIST_INST", "out": "15-11", "to": "MUX_DST", "in": "1", "start": {"x": 185, "y": 270}, "points": [{"x": 195, "y": 270}, {"x": 195, "y": 282}]},
		{"from": "DIST_INST", "out": "15-0", "to": "DIST_IMM", "in": "IN", "start": {"x": 185, "y": 275}, "points": [{"x": 190, "y": 275}, {"x": 190, "y": 355}]},
		{"from": "MUX_DST", "out": "OUT", "to": "REG", "in": "WriteReg", "end": {"x": 250, "y": 277}},
		{"from": "CONTROL", "out": "RegDst", "to": "MUX_DST", "in": "RegDst", "start": {"x": 280, "y": 120}, "points": [{"x": 290, "y": 120}, {"x": 290, "y": 100}, {"x": 212, "y": 100}]},
		{"from": "DIST_IMM", "out": "15-0", "to": "SEXT_IMM", "in": "IN"},
		{"from": "CONTROL", "out": "ALUSrc", "to": "MUX_REG", "in": "ALUSrc", "start": {"x": 280, "y": 190}, "points": [{"x": 357, "y": 190}]},
		{"from": "REG", "out": "ReadData2", "to": "FORK_REG", "in": "IN"},
		{"from": "FORK_REG", "out": "OUT1", "to": "MUX_REG", "in": "0"},
		{"from": "SEXT_IMM", "out": "OUT", "to": "FORK_IMM", "in": "IN", "points": [{"x": 340, "y": 350}]},
		{"from": "FORK_IMM", "out": "OUT1", "to": "MUX_REG", "in": "1"},
		{"from": "DIST_INST", "out": "25-0", "to": "SLL_ADDR", "in": "IN", "start": {"x": 182, "y": 250}, "points": [{"x": 182, "y": 40}]},
		{"from": "PC_ADDER", "out": "OUT", "to": "DIST_ADD4", "in": "IN"},
		{"from": "DIST_ADD4", "out": "31-28", "to": "CONCAT_ADDR", "in": "IN1", "start": {"x": 255, "y": 67}, "points": [{"x": 280, "y": 67}]},
		{"from": "SLL_ADDR", "out": "OUT", "to": "CONCAT_ADDR", "in": "IN2"},
		{"from": "DIST_ADD4", "out": "31-0", "to": "FORK_BRANCH", "in": "IN", "start": {"x": 255, "y": 83}, "points": [{"x": 320, "y": 83}]},
		{"from": "CONCAT_ADDR", "out": "OUT", "to": "MUX_JUMP", "in": "1"},
		{"from": "MUX_JUMP", "out": "OUT", "to": "PC", "in": "IN", "points": [{"x": 600, "y": 35}, {"x": 600, "y": 10}, {"x": 30, "y": 10}, {"x": 30, "y": 265}]},
		{"from": "CONTROL", "out": "Jump", "to": "MUX_JUMP", "in": "Jump", "start": {"x": 280, "y": 140}, "points": [{"x": 587, "y": 140}], "end": {"x": 587, "y": 53}},
		{"from": "DIST_IMM", "out": "5-0", "to": "ALU_CONTROL", "in": "func", "points": [{"x": 265, "y": 360}, {"x": 265, "y": 380}, {"x": 350, "y": 380}, {"x": 350, "y": 350}]},
		{"from": "CONTROL", "out": "ALUOp", "to": "ALU_CONTROL", "in": "ALUOp", "start": {"x": 280, "y": 180}, "points": [{"x": 380, "y": 180}]},
		{"from": "REG", "out": "ReadData1", "to": "ALU", "in": "IN1", "end": {"x": 400, "y": 248}},
		{"from": "MUX_REG", "out": "OUT", "to": "ALU", "in": "IN2", "end": {"x": 400, "y": 287}},
		{"from": "ALU_CONTROL", "out": "control", "to": "ALU", "in": "control", "points": [{"x": 430, "y": 350}]},
		{"from": "FORK_IMM", "out": "OUT2", "to": "SLL_IMM", "in": "IN", "points": [{"x": 340, "y": 100}]},
		{"from": "SLL_IMM", "out": "OUT", "to": "ADD_BRANCH", "in": "IN2", "points": [{"x": 405, "y": 100}, {"x": 405, "y": 82}]},
		{"from": "FORK_BRANCH", "out": "OUT1", "to": "ADD_BRANCH", "in": "IN1"},
		{"from": "ADD_BRANCH", "out": "OUT", "to": "MUX_BRANCH", "in": "1", "end": {"x": 530, "y": 77}},
		{"from": "FORK_BRANCH", "out": "OUT2", "to": "MUX_BRANCH", "in": "0", "points": [{"x": 320, "y": 55}], "end": {"x": 530, "y": 55}},
		{"from": "MUX_BRANCH", "out": "OUT", "to": "MUX_JUMP", "in": "0", "points": [{"x": 572, "y": 67}, {"x": 572, "y": 29}]},
		{"from": "CONTROL", "out": "Branch", "to": "AND_BRANCH", "in": "IN1", "start": {"x": 280, "y": 130}, "points": [{"x": 420, "y": 130}, {"x": 420, "y": 110}]},
		{"from": "ALU", "out": "ZERO", "to": "AND_BRANCH", "in": "IN2", "start": {"x": 460, "y": 255}, "points": [{"x": 470, "y": 255}, {"x": 470, "y": 120}]},
		{"from": "AND_BRANCH", "out": "OUT", "to": "MUX_BRANCH", "in": "BRANCH", "end": {"x": 537, "y": 85}, "points": [{"x": 537, "y": 115}]},
		{"from": "ALU", "out": "OUT", "to": "FORK_MEM", "in": "IN", "start": {"x": 460, "y": 275}},
		{"from": "FORK_MEM", "out": "OUT1", "to": "DATA_MEM", "in": "ADDR"},
		{"from": "FORK_REG", "out": "OUT2", "to": "DATA_MEM", "in": "WRITE_DATA", "points": [{"x": 335, "y": 308}]},
		{"from": "CONTROL", "out": "MemRead", "to": "DATA_MEM", "in": "MemRead", "start": {"x": 280, "y": 170}, "points": [{"x": 506, "y": 170}]},
		{"from": "CONTROL", "out": "MemWrite", "to": "DATA_MEM", "in": "MemWrite", "start": {"x": 280, "y": 160}, "points": [{"x": 532, "y": 160}]},
		{"from": "CONTROL", "out": "MemToReg", "to": "MUX_MEM", "in": "MemToReg", "start": {"x": 280, "y": 150}, "points": [{"x": 587, "y": 150}]},
		{"from": "DATA_MEM", "out": "OUT", "to": "MUX_MEM", "in": "1"},
		{"from": "FORK_MEM", "out": "OUT2", "to": "MUX_MEM", "in": "0", "points": [{"x": 470, "y": 352}, {"x": 570, "y": 352}, {"x": 570, "y": 281}]},
		{"from": "MUX_MEM", "out": "OUT", "to": "REG", "in": "WriteData", "end": {"x": 250, "y": 297}, "points": [{"x": 600, "y": 287}, {"x": 600, "y": 400}, {"x": 240, "y": 400}, {"x": 240, "y": 297}]}
	],
	"reg_names": ["zero", "at", "v0", "v1", "a0", "a1", "a2", "a3", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "s0", "s1", "s2", "s3", "s4", "s5", "s6", "s7", "t8", "t9", "k0", "k1", "gp", "sp", "fp", "ra"],
	"instructions": "default-extended.set"
}
